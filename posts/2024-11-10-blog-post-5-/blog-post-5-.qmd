---
title: "blog post 5 "
author: "Sean Fung"
date: "2024-11-10"
date-modified: "2024-11-10"
draft: FALSE
---

```{r}
library(tidyverse)
library(sf)
library(tidycensus)
library(here)
library(viridis)
# Load the crime data and convert to spatial format
data <- readRDS(here("filtered_data_2.rds"))
crime_sf <- st_as_sf(data, coords = c("LON", "LAT"), crs = 4326)

# Load neighborhood boundaries
neighborhoods <- st_read(here("LA_Times_Neighborhood_Boundaries-shp/8494cd42-db48-4af1-a215-a2c8f61e96a22020328-1-621do0.x5yiu.shp"))
neighborhoods <- st_transform(neighborhoods, st_crs(crime_sf))

# Perform the spatial join to link crime incidents with neighborhoods
crime_with_neighborhoods <- st_join(crime_sf, neighborhoods, join = st_within)

# Load and join median income data
economic_data <- get_acs(
    geography = "block group",
    variables = c(median_income = "B19013_001"),
    state = "CA",
    county = "Los Angeles",
    year = 2020,
    geometry = TRUE
)
economic_data <- st_transform(economic_data, st_crs(crime_with_neighborhoods))
crime_with_income <- st_join(crime_with_neighborhoods, economic_data, join = st_within)

# Summarize crime data by neighborhood, with average income and ensuring valid geometry
crime_summary <- crime_with_income %>%
  group_by(AREA.NAME) %>%
  summarize(
    total_crimes = n(),
    avg_income = mean(estimate, na.rm = TRUE),
    geometry = st_union(geometry)
  ) %>%
  st_as_sf()

# Filter out rows with NA values in avg_income
crime_summary <- crime_summary %>% filter(!is.na(avg_income))
```

```{r}


# Pull median income data for Los Angeles
income_data <- get_acs(
  geography = "tract",
  variables = c(median_income = "B19013_001"),
  state = "CA",
  county = "Los Angeles",
  year = 2020,
  geometry = TRUE
)

# Prepare the data for mapping (ensure CRS consistency)
income_data <- st_transform(income_data, crs = st_crs(crime_summary))

# Join income data with crime data (assuming `crime_summary` has neighborhood geometries)
crime_income_map <- st_join(crime_summary, income_data, join = st_within)

# Filter out areas with missing income data (if needed)
crime_income_map <- crime_income_map %>% filter(!is.na(estimate))

# Ensure geometries are valid and filter out empty or invalid geometries
# Filter out geometries with coordinates at (0, 0) or zero degrees west (longitude = 0)
crime_income_map <- crime_income_map %>%
  filter(!st_is_empty(geometry)) %>%  # Ensure geometry is not empty
  filter(!sapply(geometry, function(geom) {
    coords <- st_coordinates(geom)
    return(any(coords[,1] == 0 & coords[,2] == 0) || any(coords[,1] == 0) || any(coords[,2] == 0))
  }))

ggplot() +
  geom_sf(data = income_data, aes(fill = estimate), color = NA) +  # Median income layer
  geom_sf(data = crime_summary, aes(color = avg_income), size = 2, alpha = 0.7) +  # Crime data layer
  scale_fill_viridis_c(option = "magma", na.value = "grey50") +
  scale_color_viridis_c(option = "inferno", na.value = "grey50") +
  labs(
    title = "Median Income and Crime Data by Neighborhood in Los Angeles",
    fill = "Median Income",
    color = "Average Income"
  ) +
  theme_minimal() +
  theme(
    plot.title = element_text(size = 18, hjust = 0.5),
    legend.title = element_text(size = 14),
    legend.text = element_text(size = 12),
    axis.title = element_text(size = 12),
    axis.text = element_text(size = 10)
  ) +
  coord_sf(
    xlim = c(-119, -117),  # Adjust these values to focus on the Los Angeles area
    ylim = c(33, 35)       # Adjust these values to focus on the Los Angeles area
  )



```



