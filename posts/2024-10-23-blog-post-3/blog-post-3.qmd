---
title: "Blog post 3"
author: "Sean Fung"
date: "2024-10-23"
date-modified: "2024-10-23"
draft: FALSE
---
## **Background Information**

The following code blocks can be found in the scripts file under Sean test scripts for a complete R file for testing. This will be higher level descriptions. 


## **1. Load Required Libraries**
```{r}
# Load required libraries
library(tibble)
library(dplyr)
library(ggplot2)

library(here)

```

## **2. Clean Dataset for Readability and Ease of Use**
```{r}

data <- readRDS(here("filtered_data_copy.rds"))

data <- readRDS("filtered_data_copy.rds")


# Create a tibble with the mapping of descent codes
descent_codes <- tribble(
  ~Descent_Code, ~Descent_Description,
  "A", "Other Asian",
  "B", "Black",
  "C", "Chinese",
  "D", "Cambodian",
  "F", "Filipino",
  "G", "Guamanian",
  "H", "Hispanic/Latin/Mexican",
  "I", "American Indian/Alaskan Native",
  "J", "Japanese",
  "K", "Korean",
  "L", "Laotian",
  "O", "Other",
  "P", "Pacific Islander",
  "S", "Samoan",
  "U", "Hawaiian",
  "V", "Vietnamese",
  "W", "White",
  "X", "Unknown",
  "Z", "Asian Indian"
)

# Join the tibble with the main dataset by Vict.Descent
data_clean <- data %>%
  left_join(descent_codes, by = c("Vict.Descent" = "Descent_Code"))

# Replace unmatched or missing descriptions with "Unknown"
data_clean$Descent_Description[is.na(data_clean$Descent_Description)] <- "Unknown"

# Drop irrelevant columns with many NAs
data_clean <- data_clean[, !(names(data_clean) %in% c("Crm.Cd.2", "Crm.Cd.3", "Crm.Cd.4", "Weapon.Used.Cd", "Weapon.Desc", "Cross.Street"))]
data_clean$DATE.OCC <- as.POSIXct(data_clean$DATE.OCC, format = "%m/%d/%Y %I:%M:%S %p")

# Extract the 'month' column in "YYYY-MM" format
data_clean$month <- format(data_clean$DATE.OCC, "%Y-%m")

# Check the cleaned data
nrow(data_clean)
str(data_clean)

```
This was done in an effort to make the data more readable and cleaner. It gets rid of columns that had a lot of N/A's in the column and changes the date column to remove the 12:00 AM that was previously there and replacing it with a "DATE OCC" column that was not initially there to make the data easier to change.

It also creates another column that takes the Vict.Descent column and uses the codes from a tibble to create another column called "Descent_Code" in order to get a more readable information. Then, I checked the data. 

## **3. Data Visualization**

## *3.1 Top Locations with Crime*
```{r}
ggplot(data_clean, aes(x = reorder(AREA.NAME, AREA.NAME, function(x) -length(x)))) +
  geom_bar(fill = "steelblue") +
  theme(axis.text.x = element_text(angle = 45, hjust = 1)) +
  labs(title = "Top Locations with Highest Crime", x = "Area", y = "Count")
```
This depicts the locations for the places with the highest crime count. We previously did this last week but I wasn't sure what the graph produced was so I recreated it. Same data as last week but a better visualization. 
Personally, nothing to note here, it seems like crime is distributd pretty evenly throughout the ditricts. Can be something to be mentioned in the final project. 

## *3.2 Crime Frequency Over Time*
```{r}
ggplot(data_clean, aes(x = month)) +
  geom_bar(fill = "darkred") +
  theme(axis.text.x = element_text(angle = 90, hjust = 1)) +
  labs(title = "Crime Frequency Over Time", x = "Month", y = "Count")
```
This is a bit hard to read but I did find it interesting that there was a spike in crime in 2024 January-February. May look into further for potential findings on why that was. Otherwise, crime seems decently evenly distributed by time. 


## *3.3 Crime Counts by Descent Description*
```{r}
ggplot(data_clean, aes(x = reorder(Descent_Description, Descent_Description, function(x) -length(x)))) +
  geom_bar(fill = "purple") +
  theme(axis.text.x = element_text(angle = 45, hjust = 1)) +
  labs(title = "Crime Counts by Descent Description", x = "Descent Category", y = "Count")
```
Interesting that Hispanics represent the largest amount of crime counts by description. Even more interesting, is that Whites are second given different American stereotypes. May look into doing a correlation chart on this. 

## *3.4 Top 20 Most Frequent Crime Types*
```{r}
# Calculate the frequency of each crime type
top_crime_types <- data_clean %>%
  count(Crm.Cd.Desc, sort = TRUE) %>%
  top_n(20, n)

ggplot(top_crime_types, aes(x = reorder(Crm.Cd.Desc, n), y = n)) +
  geom_bar(stat = "identity", fill = "orange") +
  theme(axis.text.x = element_text(angle = 45, hjust = 1)) +
  labs(title = "Top 20 Most Frequent Crime Types", x = "Crime Type", y = "Count")
```

Initially looked at all types of crime but this was too large a list so it was condensed down to the above chart with the top 20 most frequent. May look into condensing some of these categories such as burglary and robbery and look into the difference between those two crimes to see if they can be condensed. I really want to treat the \$950 above and below as the same category. Still, it is interesting to see that a lot of people are still willing to commit felonies after the revision of the burglary codes. The difference between the \$950 over and under is not too much.

## *3.5 Monthly Crime Frequency by Descent*
```{r}
ggplot(data_clean, aes(x = month, fill = Descent_Description)) +
  geom_bar(position = "stack") +
  theme(axis.text.x = element_text(angle = 90, hjust = 1)) +
  labs(title = "Monthly Crime Frequency by Descent", x = "Month", y = "Count")
```
This is a confusing chart but an interesting visualization. Could be used if it considered most frequent to least frequent but we will see if we can incorporate this somehow. 


## **4. Next Steps**

May look into saving the cleaned data as a seperate rds file depending on groupmate feedback. We will see. I will sleep on it. 

Need to look at more charts like the places description to see if there are any indicators there. Also need to take a look at the time description to see which hours people are committing crime. I'm not doing anymore though at least not this week. 

Lastly, look into formulating an idea for the direction of the project and any potential uses of the **"lm()"** function.

##**5. Charts about places and time that committing crime**
```{r}
library(tidyverse)

df<- readRDS(here("filtered_data_copy.rds"))

df<- readRDS("filtered_data_copy.rds")

df <- df %>% select(-Mocodes) 
```
We take out Mocodes since it's a kind of code that use in police department. It's hard for us to analyze some useful Information.
```{r}
df <- df %>%
  mutate(
    TIME.OCC = sprintf("%04d", TIME.OCC),  
    TIME.OCC = format(strptime(TIME.OCC, format = "%H%M"), "%H:%M")  
  )
```
We transform the type of TIME.OCC to become HH:MM instead of numerical.
It's easier for us to read because some of the time like 00:01 will be handle as 1 in the previous TIME.OCC column.
We plus in the time in graph to see when would have the most case occurs.
```{r}
ggplot(df, aes(x = TIME.OCC)) +
  geom_bar(stat = "count", fill = "blue", color = "black", alpha = 0.7) +
  labs(title = "Count of TIME.OCC", x = "Time of Occurrence", y = "Frequency") +
  theme_minimal()

```
We can't see a lot of pattern because the graph is not sorted as hourly. We will take out HH from HH:MM and find the count of case to see in what hour in a day would have most case occurs.

```{r}
df <- df %>%
  mutate(Hour = substr(TIME.OCC, 1, 2))
head(df)
hourly_counts <- df %>%
  group_by(Hour) %>%
  summarise(Count = n())
ggplot(hourly_counts, aes(x = Hour, y = Count)) +
  geom_bar(stat = "identity", fill = "blue", color = "black", alpha = 0.7) +
  labs(title = "Occurrences by Hour", x = "Hour of the Day", y = "Count") +
  theme_minimal()
```
The answer is actually suprising because people thinks that mid night would be the time that will have most case. But it seems that noon time is would be the one that have the most case. It may be the reason that people may not realize and call the police after they wake up in the morning. 

This is the most updated version. 

## **6. Analyze the relationship between top crimes and specific areas.**
##6.1 analyze the highest crime in each of the top 10 areas. 
```{r}
# Calculate total crime count by area and select top 10 areas

data <- readRDS(here("filtered_data_copy.rds"))

data <- readRDS("filtered_data_copy.rds")

crime_area_summary <- data %>%
  group_by(AREA.NAME, Crm.Cd.Desc) %>%
  summarise(Crime_Count = n())

top_10_areas <- crime_area_summary %>%
  group_by(AREA.NAME) %>%
  summarise(Total_Crimes = sum(Crime_Count)) %>%
  arrange(desc(Total_Crimes)) %>%
  top_n(10, Total_Crimes) %>%
  pull(AREA.NAME)  

```

```{r}
# Filter for top 10 areas
top_10_area_crimes <- crime_area_summary %>%
  filter(AREA.NAME %in% top_10_areas)

# Find the most common crime type in each top area
highest_crime_per_area <- top_10_area_crimes %>%
  group_by(AREA.NAME) %>%
  filter(Crime_Count == max(Crime_Count)) %>%
  select(AREA.NAME, Crm.Cd.Desc, Crime_Count) %>%
  arrange(desc(Crime_Count))

```


```{r}
# plot showing the highest crime in each of the top 10 areas
ggplot(highest_crime_per_area, aes(x = reorder(AREA.NAME, -Crime_Count), y = Crime_Count, fill = Crm.Cd.Desc)) +
  geom_bar(stat = "identity") +
  labs(title = "Most Common Crime Type in Each of the Top 10 Areas",
       x = "Area",
       y = "Crime Count",
       fill = "Crime Type") +
  theme_minimal() +
  theme(axis.text.x = element_text(angle = 45, hjust = 1))
```
This helps identifying which crime types are dominant in high-crime areas, which could be usedful for 
targeted policy-making. 
it is worthy noticing that vehicle stolen us a widespread issue across several high crime areas.
burglary is the top crime in wilshire, showing a unique pattern of property crimes in that area 
compared to the others. 

##6.2 analyze which area is the most prevalent for each of the top 10 crimes 
```{r}
# Identify the top 10 most frequent crime types
top_10_crimes <- data_clean %>%
  count(Crm.Cd.Desc, sort = TRUE) %>%
  top_n(10, n) %>%
  pull(Crm.Cd.Desc) 
```

```{r}
# Filter for the top 10 crimes
top_10_crime_areas <- crime_area_summary %>%
  filter(Crm.Cd.Desc %in% top_10_crimes)

# Find the most prevalent area for each top crime
most_prevalent_area_per_crime <- top_10_crime_areas %>%
  group_by(Crm.Cd.Desc) %>%
  filter(Crime_Count == max(Crime_Count)) %>%
  select(Crm.Cd.Desc, AREA.NAME, Crime_Count) %>%
  arrange(desc(Crime_Count))

```

```{r}
# plot showing the most prevalent area for each of the top 10 crimes
ggplot(most_prevalent_area_per_crime, aes(x = reorder(Crm.Cd.Desc, -Crime_Count), y = Crime_Count, fill = AREA.NAME)) +
  geom_bar(stat = "identity") +
  labs(title = "Most Prevalent Area for Each of the Top 10 Crimes",
       x = "Crime Type",
       y = "Crime Count",
       fill = "Area") +
  theme_minimal() +
  theme(axis.text.x = element_text(angle = 45, hjust = 1))
```
vehicle stolen and burglary from vehicle are particulary prevalent in 77th street and central. 
assault with deadly weapon, aggravated assault and battery simple assault also occur very frequently 
in 77th street. 
theft of identity is most prevalent in N Hollywood, which shows a different crime pattern in this area

combining with these two charts together, vehicle theft and burglary from vehicles dominate as the most 
frequent crime types in multiple areas, especially in 77th street and central. 
the central area has a high incidence of various crimes, which may indicating that the central area
faces broader challenges. 

```{r}
# Convert the date column to Date format if not already in that format
data$DATE.OCC <- as.POSIXct(data$DATE.OCC, format = "%m/%d/%Y %I:%M:%S %p")

# Create an age group column
data <- data %>%
  mutate(Age_Group = case_when(
    Vict.Age < 18 ~ "Under 18",
    Vict.Age >= 18 & Vict.Age < 30 ~ "18-29",
    Vict.Age >= 30 & Vict.Age < 45 ~ "30-44",
    Vict.Age >= 45 & Vict.Age < 60 ~ "45-59",
    Vict.Age >= 60 ~ "60+",
    TRUE ~ "Unknown"
  ))

# Replace missing or "X" gender values with "Unknown"
data <- data %>%
  mutate(Vict.Sex = ifelse(is.na(Vict.Sex) | Vict.Sex == "X", "Unknown", Vict.Sex))

# Plot the distribution of crimes by age group and gender, including unknown gender
ggplot(data, aes(x = Age_Group, fill = Vict.Sex)) +
  geom_bar(position = "dodge") +
  labs(title = "Distribution of Crimes by Victim's Age Group and Gender",
       x = "Age Group",
       y = "Number of Crimes",
       fill = "Gender") +
  scale_fill_manual(values = c("F" = "green", "M" = "purple", "H" = "cyan", "Unknown" = "orange")) +
  theme_minimal()
```
The highest number of crimes appears to target females under 18, represented by the red bar in the "Under 18" category. This could indicate that crimes against younger females are a significant issue. Additionally The bar heights suggest that crimes involving male victims increase steadily from younger to older age groups, peaking around 30-44 and 45-59 age brackets. After 60, crime incidence significantly declines for all genders and Younger individuals (under 18 and 18-29) seem to experience a higher number of crimes overall compared to older individuals, indicating that crime incidents decrease with age. 
